basePath: /api
consumes:
- application/json
definitions:
  BuyItemRequest:
    description: |-
      BuyItemRequest is request schema for buy item
      It will  mark given item as bought by given user
    properties:
      SessionToken:
        type: string
      UserID:
        format: int64
        type: integer
      item_id:
        format: int64
        type: integer
        x-go-name: ItemID
      user_name:
        type: string
        x-go-name: UserName
    type: object
    x-go-package: shoppinglist/pkg/api
  Category:
    description: Category identifies a category with different given properties
    properties:
      id:
        format: int64
        type: integer
        x-go-name: ID
      name:
        type: string
        x-go-name: Name
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: shoppinglist/pkg/api
  CreateItemRequest:
    description: |-
      CreateItemRequest is request schema for creating new item
      It will create an item for given shopping list
    properties:
      SessionToken:
        type: string
      item:
        $ref: '#/definitions/Item'
    type: object
    x-go-package: shoppinglist/pkg/api
  CreateListRequest:
    description: |-
      CreateListRequest is request schema for creating new list
      It will create a shopping list for current user
    properties:
      SessionToken:
        type: string
      list:
        $ref: '#/definitions/List'
    type: object
    x-go-package: shoppinglist/pkg/api
  GetAllCategoriesRequest:
    description: |-
      GetAllCategoriesRequest is request schema to get categories
      It will return all the registered categories in system
    properties:
      SessionToken:
        type: string
      UserID:
        format: int64
        type: integer
    type: object
    x-go-package: shoppinglist/pkg/api
  GetAllCategoriesResponse:
    description: GetAllCategoriesResponse represents the response struct returned
      by GET categoriesAPI
    properties:
      SessionToken:
        type: string
      categories:
        description: Category represents individual category
        items:
          $ref: '#/definitions/Category'
        type: array
        x-go-name: Categories
      error:
        type: string
        x-go-name: Err
    type: object
    x-go-package: shoppinglist/pkg/api
  GetListItemsRequest:
    description: |-
      GetListItemsRequest is request schema for reading items
      It will read all the items from a lists for a user
    properties:
      SessionToken:
        type: string
      UserID:
        format: int64
        type: integer
      list_id:
        format: int64
        type: integer
        x-go-name: ListID
    type: object
    x-go-package: shoppinglist/pkg/api
  GetListItemsResponse:
    description: GetListItemsResponse represents the response struct returned by GET
      itemAPI
    properties:
      SessionToken:
        type: string
      error:
        type: string
        x-go-name: Err
      items:
        description: Item represents individual item
        items:
          $ref: '#/definitions/Item'
        type: array
        x-go-name: Items
    type: object
    x-go-package: shoppinglist/pkg/api
  GetListsRequest:
    description: |-
      GetListsRequest is request schema for reading the lists
      It will read all the lists for a user
    properties:
      SessionToken:
        type: string
      UserID:
        format: int64
        type: integer
    type: object
    x-go-package: shoppinglist/pkg/api
  GetListsResponse:
    description: GetListsResponse represents the response struct returned by GET listAPI
    properties:
      SessionToken:
        type: string
      error:
        type: string
        x-go-name: Err
      lists:
        description: List represents individual list
        items:
          $ref: '#/definitions/List'
        type: array
        x-go-name: Lists
    type: object
    x-go-package: shoppinglist/pkg/api
  Item:
    description: Item identifies an item with different given properties
    properties:
      bought_at:
        format: date-time
        type: string
        x-go-name: BoughtAt
      bought_by:
        $ref: '#/definitions/User'
      category:
        $ref: '#/definitions/Category'
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by:
        $ref: '#/definitions/User'
      deadline:
        format: date-time
        type: string
        x-go-name: Deadline
      description:
        type: string
        x-go-name: Description
      id:
        format: int64
        type: integer
        x-go-name: ID
      last_modified_at:
        format: date-time
        type: string
        x-go-name: LastModifiedAt
      last_modified_by:
        $ref: '#/definitions/User'
      list_id:
        format: int64
        type: integer
        x-go-name: ListID
      status:
        type: string
        x-go-name: Status
      title:
        type: string
        x-go-name: Title
    type: object
    x-go-package: shoppinglist/pkg/api
  List:
    description: List identifies a list with different given properties
    properties:
      access_type:
        type: string
        x-go-name: AccessType
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      created_by_me:
        type: boolean
        x-go-name: CreatedByMe
      deadline:
        format: date-time
        type: string
        x-go-name: Deadline
      description:
        type: string
        x-go-name: Description
      last_modified_at:
        format: date-time
        type: string
        x-go-name: LastModifiedAt
      list_id:
        format: int64
        type: integer
        x-go-name: ID
      name:
        type: string
        x-go-name: Name
      owner:
        $ref: '#/definitions/User'
      status:
        type: string
        x-go-name: Status
    type: object
    x-go-package: shoppinglist/pkg/api
  LoginRequest:
    description: |-
      LoginRequest will authorize a user with given username and password
      The user with given username should have already been registered
    properties:
      password:
        type: string
        x-go-name: Password
      user_name:
        type: string
        x-go-name: UserName
    type: object
    x-go-package: shoppinglist/pkg/api
  LogoutRequest:
    description: LogoutRequest will invalidate the user session
    properties:
      SessionToken:
        type: string
      UserID:
        format: int64
        type: integer
    type: object
    x-go-package: shoppinglist/pkg/api
  PingRequest:
    description: PingRequest api is used for checking health of the service
    type: object
    x-go-package: shoppinglist/pkg/api
  ShareListRequest:
    description: |-
      ShareListRequest is request schema to share a list with another user
      It will  share the list
    properties:
      SessionToken:
        type: string
      UserID:
        format: int64
        type: integer
      access_type:
        type: string
        x-go-name: AccessType
      list_id:
        format: int64
        type: integer
        x-go-name: ListID
      user_name:
        type: string
        x-go-name: UserName
    type: object
    x-go-package: shoppinglist/pkg/api
  SignupRequest:
    description: |-
      SignupRequest is request schema for signup request
      It adds a new user under given username with given user details
    properties:
      created_at:
        format: date-time
        type: string
        x-go-name: CreatedAt
      email:
        type: string
        x-go-name: Email
      full_name:
        type: string
        x-go-name: FullName
      last_logged_in_at:
        format: date-time
        type: string
        x-go-name: LastLoggedInAt
      password:
        type: string
        x-go-name: Password
      status:
        type: string
        x-go-name: Status
      updated_at:
        format: date-time
        type: string
        x-go-name: UpdatedAt
      user_name:
        type: string
        x-go-name: UserName
    type: object
    x-go-package: shoppinglist/pkg/api
  User:
    description: User identifies a user with different given properties
    properties:
      user_id:
        format: int64
        type: integer
        x-go-name: UserID
      user_name:
        type: string
        x-go-name: UserName
    type: object
    x-go-package: shoppinglist/pkg/api
host: localhost:3000
info:
  description: APIs provided by shopping list application
  title: Shopping List API service
  version: 0.1.0
paths:
  /buy:
    post:
      description: Mark an item as bought by given user
      operationId: BuyItemRequest
      parameters:
      - description: mark item as bought
        in: body
        name: BuyItemRequest
        required: true
        schema:
          $ref: '#/definitions/BuyItemRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/BuyItemResponse'
        "400":
          $ref: '#/responses/ServiceError'
        "500":
          $ref: '#/responses/ServiceError'
  /categories:
    get:
      description: Get a list of all registered categories
      operationId: GetAllCategoriesRequest
      parameters:
      - description: get list of all categories
        in: body
        name: GetAllCategoriesRequest
        required: true
        schema:
          $ref: '#/definitions/GetAllCategoriesRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/definitions/GetAllCategoriesResponse'
        "400":
          $ref: '#/responses/ServiceError'
        "500":
          $ref: '#/responses/ServiceError'
  /item:
    get:
      description: Returns all items of a list associated with logged in user
      operationId: GetListItemsRequest
      parameters:
      - description: request Parameters fetching items of list
        in: body
        name: GetListItemsRequest
        required: true
        schema:
          $ref: '#/definitions/GetListItemsRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/definitions/GetListItemsResponse'
        "400":
          $ref: '#/responses/ServiceError'
        "500":
          $ref: '#/responses/ServiceError'
    post:
      description: Creates an item in given shopping list
      operationId: CreateItemRequest
      parameters:
      - description: request parameters for create item
        in: body
        name: CreateItemRequest
        required: true
        schema:
          $ref: '#/definitions/CreateItemRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/CreateItemResponse'
        "400":
          $ref: '#/responses/ServiceError'
        "500":
          $ref: '#/responses/ServiceError'
  /list:
    get:
      description: Returns all list associated with logged in user
      operationId: GetListsRequest
      parameters:
      - description: request Parameters fetching lists
        in: body
        name: GetListsRequest
        required: true
        schema:
          $ref: '#/definitions/GetListsRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/definitions/GetListsResponse'
        "400":
          $ref: '#/responses/ServiceError'
        "500":
          $ref: '#/responses/ServiceError'
    post:
      description: Creates a new shopping list for logged in user
      operationId: CreateListRequest
      parameters:
      - description: request Parameters for create list
        in: body
        name: CreateListRequest
        required: true
        schema:
          $ref: '#/definitions/CreateListRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/CreateListResponse'
        "400":
          $ref: '#/responses/ServiceError'
        "500":
          $ref: '#/responses/ServiceError'
  /login:
    post:
      description: Logs in a registered user
      operationId: LoginRequest
      parameters:
      - description: request Parameters for login
        in: body
        name: LoginRequest
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/LoginResponse'
        "400":
          $ref: '#/responses/ServiceError'
        "500":
          $ref: '#/responses/ServiceError'
  /logout:
    post:
      description: Logs out a logged in user
      operationId: LogoutRequest
      parameters:
      - description: request Parameters for logout
        in: body
        name: LogoutRequest
        required: true
        schema:
          $ref: '#/definitions/LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/LogoutResponse'
        "400":
          $ref: '#/responses/ServiceError'
        "500":
          $ref: '#/responses/ServiceError'
  /ping:
    get:
      description: Api for checking status of the service
      operationId: PingRequest
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/PingResponse'
        "500":
          description: StatusInternalServerError
  /share:
    post:
      description: Share a list with given user
      operationId: ShareListRequest
      parameters:
      - description: share a list with user
        in: body
        name: ShareListRequest
        required: true
        schema:
          $ref: '#/definitions/ShareListRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/ShareListResponse'
        "400":
          $ref: '#/responses/ServiceError'
        "500":
          $ref: '#/responses/ServiceError'
  /signup:
    post:
      description: Enrolls a new user in the system
      operationId: SingupRequest
      parameters:
      - description: request Parameters for signup
        in: body
        name: SignupRequest
        required: true
        schema:
          $ref: '#/definitions/SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/SignupResponse'
        "400":
          $ref: '#/responses/ServiceError'
        "500":
          $ref: '#/responses/ServiceError'
produces:
- application/json
responses:
  BuyItemResponse:
    description: BuyItemResponse represents the response struct returned by POST buyAPI
    headers:
      SessionToken:
        type: string
      error:
        type: string
  CreateItemResponse:
    description: CreateItemResponse represents the response struct returned by POST
      itemAPI
    headers:
      SessionToken:
        type: string
      error:
        type: string
  CreateListResponse:
    description: CreateListResponse represents the response struct returned by POST
      listAPI
    headers:
      SessionToken:
        type: string
      error:
        type: string
  DeleteItemResponse:
    description: DeleteItemResponse represents the response struct returned by POST
      deleteitemAPI
    headers:
      Err:
        type: string
      SessionToken:
        type: string
  DeleteListResponse:
    description: DeleteListResponse represents the response struct returned by POST
      deletelistAPI
    headers:
      Err:
        type: string
      SessionToken:
        type: string
  LoginResponse:
    description: LoginResponse represents the response struct returned by loginAPI
    headers:
      SessionToken:
        type: string
      error:
        type: string
  LogoutResponse:
    description: LogoutResponse represents the response struct returned by logoutAPI
    headers:
      error:
        type: string
  PingResponse:
    description: PingResponse is the response of PingRequest
    headers:
      error:
        type: string
  ServiceError:
    description: ServiceError is error struct
    headers:
      errcode:
        description: HTTP Error Codes
        format: int64
        type: integer
      errmsg:
        description: Very Detailed Error Msg describing the stack trace of error
        type: string
  ShareListResponse:
    description: ShareListResponse represents the response struct returned by POST
      shareAPI
    headers:
      SessionToken:
        type: string
      error:
        type: string
  SignupResponse:
    description: SignupResponse represents the response struct returned by singupAPI
    headers:
      error:
        type: string
schemes:
- http
- https
swagger: "2.0"
